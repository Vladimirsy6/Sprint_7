{"name": "Проверка получения ошибки аутентификации курьера при вводе невалидных данных", "status": "failed", "statusDetails": {"message": "AssertionError: assert (404 == 404 and {'code': 404, 'message': 'Учетная запись не найдена'} == {'message': 'Учетная запись не найдена'}\n +  where 404 = <Response [404]>.status_code\n  \n  Common items:\n  {'message': 'Учетная запись не найдена'}\n  Left contains 1 more item:\n  {'code': 404}\n  \n  Full diff:\n    {\n  +     'code': 404,\n        'message': 'Учетная запись не найдена',\n    })", "trace": "self = <test_courier_login.TestCourierLogin object at 0x0000027DF37B9F30>\nnonexistent_credentials = {'login': 'Vov1998', 'password': '123456'}\n\n    @allure.title('Проверка получения ошибки аутентификации курьера при вводе невалидных данных')\n    @allure.description('В тест по очереди передаются наборы данных с несуществующим логином или неверным паролем. '\n                        'Проверяются код и тело ответа.')\n    @pytest.mark.parametrize('nonexistent_credentials', [\n        {'login': create_random_login(), 'password': create_random_password()},\n        Data.courier_data_with_wrong_password\n    ])\n    def test_courier_login_nonexistent_data_not_found(self, nonexistent_credentials):\n        response = requests.post(Urls.URL_courier_login, data=nonexistent_credentials)\n>       assert response.status_code == 404 and response.json() == {'message': 'Учетная запись не найдена'}\nE       AssertionError: assert (404 == 404 and {'code': 404, 'message': 'Учетная запись не найдена'} == {'message': 'Учетная запись не найдена'}\nE        +  where 404 = <Response [404]>.status_code\nE         \nE         Common items:\nE         {'message': 'Учетная запись не найдена'}\nE         Left contains 1 more item:\nE         {'code': 404}\nE         \nE         Full diff:\nE           {\nE         +     'code': 404,\nE               'message': 'Учетная запись не найдена',\nE           })\n\ntest_courier_login.py:26: AssertionError"}, "description": "В тест по очереди передаются наборы данных с несуществующим логином или неверным паролем. Проверяются код и тело ответа.", "parameters": [{"name": "nonexistent_credentials", "value": "{'login': 'Vov1998', 'password': '123456'}"}], "start": 1754316237167, "stop": 1754316237233, "uuid": "40ebcd1a-8c2f-4c13-bf66-c94eec9b1b9c", "historyId": "c2566aac60f32c132f34cd6fcd70acb3", "testCaseId": "c31ed3c086400be378406bfc040d3ff6", "fullName": "test_courier_login.TestCourierLogin#test_courier_login_nonexistent_data_not_found", "labels": [{"name": "suite", "value": "test_courier_login"}, {"name": "subSuite", "value": "TestCourierLogin"}, {"name": "host", "value": "Vova"}, {"name": "thread", "value": "23024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_courier_login"}]}